##  @see    https://docs.travis-ci.com/user/languages/android/
##  @see    https://medium.com/@distillerytech/painless-travis-ci-cd-for-android-project-8c5bce253c4b
##  @see    https://medium.com/@harmittaa/travis-ci-android-example-357f6e632fc4


language: android
jdk: oraclejdk8
dist: trusty



env:
  global:
    - ADB_INSTALL_TIMEOUT=5 # minutes
    - ANDROID_API_LEVEL=25
    - ANDROID_BUILD_TOOLS_VERSION=25.0.2
    - EMULATOR_API_LEVEL=21
#    - ANDROID_API_LEVEL=30
#    - ANDROID_BUILD_TOOLS_VERSION=30.0.1



#   Caching
# A peculiarity of dependency caching in Gradle means that to avoid uploading the cache after every
# build you need to add the following lines to your .travis.yml:
before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - $HOME/.android/build-cache



android:
  components:
    - tools
    - platform-tools
    # The BuildTools version used by your project
    - build-tools-$ANDROID_BUILD_TOOLS_VERSION
    # The SDK version used to compile your project
    - android-$ANDROID_API_LEVEL
    - android-$EMULATOR_API_LEVEL
    # Additional components
    - extra-android-m2repository # for design library
    - extra-google-google_play_services
    - extra-google-m2repository
    - addon-google_apis-google-$ANDROID_API_LEVEL # google play services
    - sys-img-armeabi-v7a-addon-google_apis-google-$ANDROID_API_LEVEL
    - sys-img-armeabi-v7a-addon-google_apis-google-$EMULATOR_API_LEVEL
#    # Uncomment the lines below if you want to
#    # use the latest revision of Android SDK Tools
#    # - tools
#    # - platform-tools
#
#    # The BuildTools version used by your project
#    - build-tools-26.0.2
#
#    # The SDK version used to compile your project
#    - android-26
#
#    # Additional components
#    - extra-google-google_play_services
#    - extra-google-m2repository
#    - extra-android-m2repository
#
#    # Specify at least one system image,
#    # if you need to run emulator(s) during your tests
#    - sys-img-x86-android-26
#    - sys-img-armeabi-v7a-android-17


  #   Licenses
  licenses:
    - 'android-sdk-preview-license-.+'
    - 'android-sdk-license-.+'
    - 'google-gdk-license-.+'



before_install:
  - android list targets
#  - mkdir "$ANDROID_HOME/licenses" || true
#  - echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55" > "$ANDROID_HOME/licenses/android-sdk-license"
#  - echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "$ANDROID_HOME/licenses/android-sdk-preview-license"
  - chmod +x gradlew
#  - ./gradlew dependencies || true



before_script:
#  - mkdir -p "$ANDROID_HOME/licenses"
#  - cp ./google-licenses/* "$ANDROID_HOME/licenses/"
  # Android emulator - Creation and startup
#  - echo no | android create avd --force -n test -t android-22 --abi armeabi-v7a -c 100M
#  - emulator -avd test -no-audio -no-window &
#  - android-wait-for-emulator
#  - adb shell input keyevent 82 &



script:
  # Command `./gradlew connectedCheck` executes instrumentation tests located in src/androidTests/
  - "./gradlew clean build connectedCheck -PdisablePreDex --stacktrace"
